service: projects-java-lambda

provider:
  name: aws
  runtime: java8
  stage: beta
  region: us-east-1
  role: arn:aws:iam::654918520080:role/APIG-LAMBDA-DDB
  apiGateway:
    shouldStartNameWithService: true
  usagePlan:
    quota:
      limit: 500
      offset: 0
      period: MONTH
    throttle:
      burstLimit: 20
      rateLimit: 10
  environment:
    NODE_ENV: beta
    LOGICAL_ENV: dev

# you can add packaging information here
package:
  artifact: target/projects-java-lambda.jar

functions:
  authorizer:
    handler: com.eandbsolutions.handlers.AuthHandler
    # provisionedConcurrency: 2

  health:
    handler: com.eandbsolutions.handlers.HelloHandler
    description: Gateway health check. Responds with current time and a short message.
    events:
      - http:
          path: /health
          method: get

  json:
    handler: com.eandbsolutions.handlers.JsonHandler
    description: Json checker
    events:
      - http:
          path: /json
          method: post

  file:
    handler: com.eandbsolutions.handlers.FileHandler
    description: File pathing checker
    events:
      - http:
          path: /file
          method: get

  env:
    handler: com.eandbsolutions.handlers.EnvHandler
    description: Used to check for Environment variables in AWS Lambda
    events:
      - http:
          path: /env
          method: get

  log:
    handler: com.eandbsolutions.handlers.LogHandler
    description: Used to check how global logging works
    events:
      - http:
          path: /log
          method: get

  database:
    handler: com.eandbsolutions.handlers.DatabaseHandler
    description: Used to check how DDB and aws-sdk works
    events:
      - http:
          path: /database
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 3600
            type: request

  mapper-save:
    handler: com.eandbsolutions.handlers.MapperSaveHandler
    description: Used to check how DDB and aws-sdk works with DynamoDBMapper
    events:
      - http:
          path: /mapper-save
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 3600
            type: request

  mapper-get:
    handler: com.eandbsolutions.handlers.MapperGetHandler
    description: Used to check how DDB and aws-sdk works with DynamoDBMapper
    # provisionedConcurrency: 2
    events:
      - http:
          path: /mapper-get
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 3600
            type: request

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: java.otterandcow.com
    basePath: "beta"
    stage: beta
    createRoute53Record: true
